<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.handas.shop.ShopDao">
	
	<select id="shopList" resultType="com.spring.handas.shop.ShopDto" parameterType="com.spring.handas.PageMaker">
		SELECT * FROM (SELECT ROWNUM rnum, handas_shop.* FROM (select * from handas_shop ORDER BY pnum DESC) handas_shop) WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<insert id="shopWrite" parameterType="com.spring.handas.shop.ShopDto">
		INSERT INTO handas_shop VALUES(handas_shop_seq.nextval, #{pname}, #{item}, #{price}, #{pdesc}, #{img}, sysdate, #{totalVol})
	</insert>
	
	<select id="shopRead" resultType="com.spring.handas.shop.ShopDto">
		SELECT handas_shop.*, (select count(*) from handas_comment where pnum = #{param1}) as comment_cnt FROM handas_shop where pnum = #{param1}
	</select>
	
	<select id="shopCnt" resultType="int">
		SELECT COUNT(*) as num FROM handas_shop
	</select>
	
	<!-- 상품정보 수정 -->
	<update id="shopUpdate" parameterType="com.spring.handas.shop.ShopDto">
		UPDATE handas_shop SET pname = #{pname}, item = #{item}, price = #{price}, pdesc = #{pdesc}, img = #{img}, totalVol = #{totalVol} WHERE pnum = #{pnum}
	</update>
	
	<select id="shopImgName" resultType="String">
		SELECT img FROM handas_shop WHERE pnum = #{pnum}
	</select>
	
	<!-- 상품정보 삭제 -->
	<delete id="shopDelete">
		DELETE handas_shop WHERE pnum = #{pnum} cascade constraints
	</delete>
	
	<!-- 상품정보 삭제시 해당 카트 db에서 다 삭제 -->
	<delete id="cartDeleteAll">
		DELETE handas_cart WHERE pnum = #{pnum}
	</delete>
	
	<!-- 장바구니 넣기 전에 같은 제품이 존재하는지 체크 -->
	<select id="cartCheck" resultType="int">
		SELECT COUNT(*) AS NUM FROM handas_cart WHERE userID = #{param1} and pnum = #{param2}
	</select>
	
	<!-- 장바구니 넣기 -->
	<insert id="cartWrite" parameterType="com.spring.handas.shop.CartDto">
		INSERT INTO handas_cart VALUES(handas_cart_seq.nextval, #{userID}, #{pnum}, #{volume})
	</insert>
	
	<!-- 장바구니 정보 가져오기 -->
	<select id="cartList" resultType="com.spring.handas.shop.CartDto">
		select a.*, b.pname, b.item, b.price, b.img, b.totalVol from handas_cart a left outer join handas_shop b on a.pnum = b.pnum WHERE userID = #{userID} ORDER BY num DESC
	</select>
	
	<delete id="cartDelete">
		DELETE handas_cart WHERE userID = #{param1} AND pnum = #{param2}
	</delete>
	
	<!-- 주문 내역 삽입 -->
	<insert id="order" parameterType="com.spring.handas.shop.OrderDto">
		INSERT INTO handas_order VALUES(handas_order_seq.nextval, #{orderNo}, #{userID}, #{name}, #{address1}, #{address2}, #{address3}, #{phone}, #{message}, #{totalCnt}, #{totalPrice}, sysdate, #{sample_pnum}, 1)
	</insert>
	
	<!-- 주문 상세 내역에 삽입 -->
	<insert id="orderD" parameterType="com.spring.handas.shop.ShopDto">
		INSERT INTO handas_orderD VALUES(handas_orderD_seq.nextval, #{orderNo}, #{pnum}, #{volume})
	</insert>
	
	<!-- 주문 후 재고량 변경 -->
	<update id="shopCntUpdate">
		UPDATE handas_shop SET totalVol = totalVol - #{param1} WHERE pnum = #{param2}
	</update>
	
	<!-- 해당 주문 상세 내역 주문 상품 숫자 -->
	<select id="orderDCnt" resultType="int">
		SELECT COUNT(*) as num FROM handas_orderD WHERE orderNo = #{param1}
	</select>
	
	<!-- 해당 회원 주문 정보 가져오기 -->
	<select id="getOrderAll" resultType="com.spring.handas.shop.OrderDto">
		select a.*, b.pname, b.img from handas_order a 
			left outer join handas_shop b on a.sample_pnum = b.pnum 
		WHERE userID = #{param1} and visible = 1 ORDER BY num desc
	</select>
	
	<!-- 해당 회원 주문 상세 정보 가져오기 -->
	<select id="getOrder" resultType="com.spring.handas.shop.OrderDto">
		select * from handas_order
	</select>
	
	<!-- 해당 회원 주문 상세 정보 가져오기 -->
	<select id="getOrderD" resultType="com.spring.handas.shop.OrderDDto">
		select a.*, b.pname, b.item, b.price, b.img from handas_orderD a
			left outer join handas_shop b on a.pnum = b.pnum
		where orderNo = #{param2}
	</select>
	
	<!-- 해당 회원 정보 가져오기 -->
	<select id="getOrderRead" resultType="com.spring.handas.shop.OrderDto">
		select * from handas_order where orderNo = #{param1}
	</select>
	
	<!-- 주문내역 삭제 -->
	<update id="orderDelete">
		UPDATE handas_order SET visible = 0 WHERE num = #{param1}
	</update>
		
	<!-- 상품평 쓰기 -->
	<insert id="shopComment">
		INSERT INTO handas_comment VALUES(handas_comment_seq.nextval, #{pnum}, #{userID}, #{content}, #{star}, sysdate)
	</insert>
	
	<!-- 상품평 가져오기 -->
	<select id="shopCommentList" resultType="com.spring.handas.shop.CommentDto">
		select * from handas_comment WHERE pnum = #{param1} order by num desc
	</select>
	
	<!-- 상품평 삭제 -->
	<delete id="shopCommentDelete">
		delete handas_comment WHERE num = #{param1}
	</delete>
	
</mapper>
